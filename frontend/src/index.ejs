<!DOCTYPE html>
<html>
<head>
    <title>Jarvis</title>
    <link rel="stylesheet" type="text/css" href="/css/styles.css">
    <style>
        /* Loading screen styles */
        .loading-screen {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 1000;
            text-align: center;
            padding-top: 20%;
            font-size: 24px;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Helpdesk</h1>
        <div class="form-container">
            <form id="fetchUserForm" action="/fetch-user" method="post">
                <label for="userID">User ID:</label>
                <input type="text" id="userID" name="userID">
                <button type="submit">Fetch User</button>
            </form>
        </div>
    </div>

    <div class="navbar">
        <a onclick="showSection('dashboard')">Dashboard</a>
        <a onclick="showSection('user-prop')">User Properties</a>
        <a onclick="showSection('placeholder')">Placeholder</a>
    </div>

    <div class="content" id="dashboard">
        <h2>Dashboard</h2>
        <form id="testForm" action="/test" method="post">
            <button type="submit">Test</button>
        </form>
        <div id="testOutputContainer">
            <% if (typeof testOutput !== 'undefined') { %>
                <h2>Test Output:</h2>
                <p><%= testOutput %></p>
            <% } %>
        </div>
    </div>

    <div class="content" id="user-prop">
        <h2>User Properties</h2>
        <div class="loading-screen" id="loadingScreen">Loading...</div>
        <div id="userPropertiesContainer">
            <% if (typeof userProperties !== 'undefined') { %>
                <pre><%= userProperties %></pre>
            <% } else { %>
                <p>No user properties found.</p>
            <% } %>
        </div>
    </div>

    <div class="content" id="placeholder">
        <h2>Placeholder</h2>
        <p>This is a placeholder for a different view.</p>
    </div>

    <script>
        // Function to show the selected section and hide others
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.content');
            sections.forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(sectionId).classList.add('active');
        }

        // Show the dashboard section by default
        showSection('dashboard');

        // Handle form submission with AJAX
        document.getElementById('fetchUserForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the default form submission

            // Show the User Properties view immediately
            showSection('user-prop');

            // Show the loading screen
            document.getElementById('loadingScreen').style.display = 'block';

            const form = event.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                // Update the user properties section with the response data
                document.getElementById('userPropertiesContainer').innerHTML = data;

                // Hide the loading screen
                document.getElementById('loadingScreen').style.display = 'none';
            })
            .catch(error => {
                console.error('Error:', error);

                // Hide the loading screen in case of error
                document.getElementById('loadingScreen').style.display = 'none';
            });
        });

        // Handle test form submission with AJAX
        document.getElementById('testForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the default form submission

            const form = event.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: form.method,
                body: formData
            })
            .then(response => response.text())
            .then(data => {
                // Update the test output section with the response data
                document.getElementById('testOutputContainer').innerHTML = data;
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>
</body>
</html>